{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sylvanamelens/Dev/PROJETS/PERSOS/ELVISH/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [english, setEnglish] = useState({\n    text: ''\n  });\n  const [elvish, setElvish] = useState({});\n  const errorMsg = ['Uh uh too many tries, please try again later...', '(App allows 5 translations an hour and 60 times a day)'];\n\n  const handleChange = e => {\n    const text = e.target.value;\n    setEnglish({\n      text\n    });\n    setElvish({});\n  };\n\n  const postData = () => {\n    window.fetch(`https://api.funtranslations.com/translate/sindarin?text=${english.text}`).then(res => res.json()).then(json => setElvish(json.contents)).catch(err => console.log(err)).catch(err => console.log(err));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    postData(); // GERER LE CAS OU ON NE RECUPERE RIEN DE L API\n\n    if (!elvish) {\n      setEnglish({\n        text: ''\n      });\n      setElvish('');\n      console.log(elvish);\n    } else {\n      setEnglish({\n        text: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Elvish translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"text-area\",\n        name: \"text-area\",\n        rows: \"7\",\n        cols: \"60\",\n        maxLength: \"150\",\n        onChange: handleChange,\n        value: english.text,\n        placeholder: \"Text to translate here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), english.text.length >= 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-chars\",\n          children: 150 - english.text.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Translate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), elvish ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `translation ${english.text.length > 50 ? 'little' : 'big'}`,\n      children: elvish.translated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMsg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMsg[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMsg[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qgKgcbH3KEJFn4VI4i8HSI8rpt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sylvanamelens/Dev/PROJETS/PERSOS/ELVISH/src/App.js"],"names":["React","useState","App","english","setEnglish","text","elvish","setElvish","errorMsg","handleChange","e","target","value","postData","window","fetch","then","res","json","contents","catch","err","console","log","handleSubmit","preventDefault","length","translated"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\n\nconst App = () => {\n  const [english, setEnglish] = useState({ text: '' })\n  const [elvish, setElvish] = useState({ })\n  const errorMsg = ['Uh uh too many tries, please try again later...', '(App allows 5 translations an hour and 60 times a day)']\n\n  const handleChange = e => {\n    const text = e.target.value\n    setEnglish({ text })\n    setElvish({})\n  }\n\n  const postData = () => {\n    window.fetch(`https://api.funtranslations.com/translate/sindarin?text=${english.text}`)\n      .then(res => res.json())\n      .then(json => setElvish(json.contents))\n      .catch(err => console.log(err))\n      .catch(err => console.log(err))\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    postData()\n    // GERER LE CAS OU ON NE RECUPERE RIEN DE L API\n    if (!elvish) {\n      setEnglish({ text: '' })\n      setElvish('')\n      console.log(elvish)\n    } else {\n      setEnglish({ text: '' })\n    }\n  }\n\n  return (\n    <div className='App'>\n      <h1>Elvish translator</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          id='text-area'\n          name='text-area'\n          rows='7'\n          cols='60'\n          maxLength='150'\n          onChange={handleChange}\n          value={english.text}\n          placeholder='Text to translate here'\n        />\n        {/* FAIRE APPARAITRE LE BOUTON ET LES CHAR RESTANTS SI QQCH EST TAPE DS LE TEXT AREA */}\n        {english.text.length >= 1 && (\n          <>\n            <div className='left-chars'>{150 - english.text.length}</div>\n            <button type='submit'>Translate</button>\n          </>\n        )}\n      </form>\n\n      {/* FAIRE VARIER LA TAILLE DE LA POLICE ET LA MARGE SUPERIEURE EN FONCTION DE LA TAILLE DU TEXTE A TRADUIRE - A PEAUFINER */}\n      {elvish\n        ? (\n          <div className={`translation ${english.text.length > 50 ? 'little' : 'big'}`}>\n            {elvish.translated}\n          </div>\n          )\n        : (\n          <div className='errorMsg'>\n            <p>{errorMsg[0]}</p>\n            <p>{errorMsg[1]}</p>\n          </div>\n          )}\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}